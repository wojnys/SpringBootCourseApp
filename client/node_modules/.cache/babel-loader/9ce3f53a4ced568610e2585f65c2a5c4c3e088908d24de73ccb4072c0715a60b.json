{"ast":null,"code":"var _jsxFileName = \"/Users/dominikwojnar/Documents/Java/SpringBoot/CourseApp/client/src/pages/Admin/User/AllUsersPage/AllUsersPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container } from \"@mui/material\";\nimport CardUser from \"../../../../components/Cards/CardUser\";\nimport axios from \"axios\";\nimport MessageBox from \"../../../../components/Messages/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllUsersPage() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [statusCode, setStatusCode] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const fetchAllUsers = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/user`);\n      console.log(response.data);\n      setUsers(response.data);\n    } catch (err) {\n      console.log(err);\n      setMessages([\"Cannot connect to the server\"]);\n      setStatusCode(400);\n    }\n  };\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n  const handleUserWasDeleted = (userId, status) => {\n    console.log(userId, status);\n    if (status <= 205) {\n      setUsers(users.filter(user => user.id !== userId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      width: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-left text-xl p-6\",\n      children: \"All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      gap: 3,\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(CardUser, {\n        id: user.id,\n        firstname: user.firstname,\n        lastname: user.lastname,\n        email: user.email,\n        phone: user.phone,\n        courses: user.courses,\n        userWasDeleted: handleUserWasDeleted\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), messages.length > 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n      messages: messages,\n      status: statusCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(AllUsersPage, \"D8aUMWulq61IzcfNGuKE6DNW2OM=\");\n_c = AllUsersPage;\nexport default AllUsersPage;\nvar _c;\n$RefreshReg$(_c, \"AllUsersPage\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","CardUser","axios","MessageBox","jsxDEV","_jsxDEV","AllUsersPage","_s","users","setUsers","statusCode","setStatusCode","messages","setMessages","fetchAllUsers","response","get","process","env","REACT_APP_SERVER_URL","console","log","data","err","handleUserWasDeleted","userId","status","filter","user","id","sx","width","children","className","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flexWrap","gap","map","index","firstname","lastname","email","phone","courses","userWasDeleted","length","_c","$RefreshReg$"],"sources":["/Users/dominikwojnar/Documents/Java/SpringBoot/CourseApp/client/src/pages/Admin/User/AllUsersPage/AllUsersPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Box, Container} from \"@mui/material\";\nimport CardUser from \"../../../../components/Cards/CardUser\";\nimport axios from \"axios\";\nimport MessageBox from \"../../../../components/Messages/MessageBox\";\n\ntype User = {\n    id: number,\n    firstname: string,\n    lastname: string,\n    email: string\n    phone: number,\n    courses: Course[]\n}\ntype Course = {\n    id: number,\n    name: string,\n    description: string,\n    price: number,\n    topic: Topic\n}\ntype Topic = {\n    id: number,\n    name:string\n}\n\nfunction AllUsersPage() {\n\n    const [users, setUsers] = useState<User[]>([]);\n    const [statusCode, setStatusCode] = useState<number>(0)\n    const [messages, setMessages] = useState<string[]>([]);\n\n    const fetchAllUsers = async () => {\n        try {\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/user`)\n            console.log(response.data)\n            setUsers(response.data)\n        }catch(err) {\n            console.log(err)\n            setMessages([\"Cannot connect to the server\"])\n            setStatusCode(400)\n        }\n    }\n\n    useEffect(() => {\n        fetchAllUsers();\n    }, []);\n\n    const handleUserWasDeleted = (userId:number, status:number) => {\n        console.log(userId, status)\n        if(status <= 205) {\n            setUsers(users.filter((user => user.id !== userId)))\n        }\n    }\n\n    return (\n        <Container sx={{width: 1}}>\n            <h1 className={\"text-left text-xl p-6\"}>All Users</h1>\n\n            <Box display={\"flex\"} justifyContent={\"center\"} flexWrap={\"wrap\"} gap={3}>\n                {\n                    users.map((user, index) => (\n                        <CardUser key={index} id={user.id} firstname={user.firstname} lastname={user.lastname} email={user.email} phone={user.phone} courses={user.courses} userWasDeleted={handleUserWasDeleted}/>\n\n                    ))\n                }\n            </Box>\n\n            {\n                messages.length > 0 && <MessageBox messages={messages} status={statusCode}/>\n            }\n        </Container>\n    );\n}\n\nexport default AllUsersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}