{"ast":null,"code":"var _jsxFileName = \"/Users/dominikwojnar/Documents/Java/SpringBoot/CourseApp/client/src/pages/Admin/Course/AllCoursesPage/AllCoursesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container } from \"@mui/material\";\nimport axios from \"axios\";\nimport CardCourse from \"../../../../components/Cards/CardCourse\";\nimport MessageBox from \"../../../../components/Messages/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllCoursesPage() {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [statusCode, setStatusCode] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const fetchCourses = async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/course`);\n      console.log(response.data);\n      setCourses(response.data);\n    } catch (e) {\n      console.log(e);\n      setMessages([\"Cannot connect to the server\"]);\n      setStatusCode(400);\n    }\n  };\n  useEffect(() => {\n    fetchCourses();\n  }, []);\n  courses.map(course => {\n    var _course$topic;\n    return console.log((_course$topic = course.topic) === null || _course$topic === void 0 ? void 0 : _course$topic.name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      width: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-left text-xl p-6\",\n      children: \"All Courses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      gap: 3,\n      children: courses.map((course, index) => {\n        var _course$topic2, _course$topic3;\n        return /*#__PURE__*/_jsxDEV(CardCourse, {\n          description: course.description,\n          price: course.price,\n          id: course.id,\n          topicName: (_course$topic2 = course.topic) === null || _course$topic2 === void 0 ? void 0 : _course$topic2.name,\n          topicId: (_course$topic3 = course.topic) === null || _course$topic3 === void 0 ? void 0 : _course$topic3.id,\n          name: course.name,\n          index: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), messages.length > 0 && /*#__PURE__*/_jsxDEV(MessageBox, {\n      messages: messages,\n      status: statusCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(AllCoursesPage, \"8fk8S5DHV7WPmYIV5MDhIfta7CM=\");\n_c = AllCoursesPage;\nexport default AllCoursesPage;\nvar _c;\n$RefreshReg$(_c, \"AllCoursesPage\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","axios","CardCourse","MessageBox","jsxDEV","_jsxDEV","AllCoursesPage","_s","courses","setCourses","statusCode","setStatusCode","messages","setMessages","fetchCourses","response","get","process","env","REACT_APP_SERVER_URL","console","log","data","e","map","course","_course$topic","topic","name","sx","width","children","className","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","flexWrap","gap","index","_course$topic2","_course$topic3","description","price","id","topicName","topicId","length","status","_c","$RefreshReg$"],"sources":["/Users/dominikwojnar/Documents/Java/SpringBoot/CourseApp/client/src/pages/Admin/Course/AllCoursesPage/AllCoursesPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Badge, Box, Card, CardActionArea, CardContent, CardMedia, Container, Typography} from \"@mui/material\";\nimport axios from \"axios\";\nimport CardCourse from \"../../../../components/Cards/CardCourse\";\nimport MessageBox from \"../../../../components/Messages/MessageBox\";\n\ntype Course = {\n    id: number\n    name: string\n    description: string\n    price: number,\n    topic: Topic\n}\n\ntype Topic = {\n    id: number\n    name: string\n}\n\nfunction AllCoursesPage() {\n\n    const [courses, setCourses] = useState<Course[]>([]);\n\n    const [statusCode, setStatusCode] = useState<number>(0)\n    const [messages, setMessages] = useState<string[]>([]);\n\n    const fetchCourses = async () => {\n        try {\n            const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/api/course`)\n            console.log(response.data);\n            setCourses(response.data)\n        } catch (e) {\n            console.log(e)\n            setMessages([\"Cannot connect to the server\"])\n            setStatusCode(400)\n        }\n    }\n\n    useEffect(() => {\n        fetchCourses();\n    }, []);\n\n    courses.map((course) => console.log(course.topic?.name))\n    return (\n        <Container sx={{ width: 1 }}>\n            <h1 className={\"text-left text-xl p-6\"}>All Courses</h1>\n            <Box display=\"flex\" justifyContent=\"center\" flexWrap={\"wrap\"} gap={3}>\n                {courses.map((course, index) => (\n                    <CardCourse key={index} description={course.description} price={course.price} id={course.id} topicName={course.topic?.name} topicId={course.topic?.id} name={course.name} index={index+1}/>\n                ))}\n            </Box>\n\n            {\n                messages.length > 0 && <MessageBox messages={messages} status={statusCode}/>\n            }\n        </Container>\n    );\n}\n\nexport default AllCoursesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}